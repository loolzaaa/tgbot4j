package ru.loolzaaa.tgbot4j.core.api.methods;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import ru.loolzaaa.tgbot4j.core.api.TelegramMethod;
import ru.loolzaaa.tgbot4j.core.exception.ApiValidationException;

/**
 * Use this method to generate a new primary invite link for a chat;
 * any previously generated primary link is revoked.
 * The bot must be an administrator in the chat for this to work
 * and must have the appropriate administrator rights.
 * Returns the new invite link as String on success.
 *
 * @implNote Each administrator in a chat generates their own invite links.
 * Bots can't use invite links generated by other administrators.
 * If you want your bot to work with invite links,
 * it will need to generate its own link using {@link ExportChatInviteLink} or
 * by calling the {@link GetChat} method.
 * If your bot needs to generate a new primary invite link
 * replacing its previous one, use {@link ExportChatInviteLink} again.
 */

@Data
@NoArgsConstructor
@AllArgsConstructor
public class ExportChatInviteLink implements TelegramMethod<String> {
    /**
     * Unique identifier for the target group or username
     * of the target supergroup or channel (in the format {@code @channelusername})
     */
    @JsonProperty("chat_id")
    private String chatId;

    @Override
    public String determineResponseType(ObjectMapper mapper, JsonNode resultNode) {
        return deserializeObjectResponse(mapper, resultNode, String.class);
    }

    @Override
    public void validate() {
        if (chatId == null) {
            throw new ApiValidationException("Chat ID parameter can't be null", this);
        }
    }
}
